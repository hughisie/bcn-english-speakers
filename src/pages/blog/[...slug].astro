---
import { type CollectionEntry, getCollection } from 'astro:content';
import Layout from '../../layouts/layout.astro';
import Container from '../../components/page-container.astro';

// export const prerender = true;

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
---

<style is:global>
  /* Unscoped, delivered as-is to the browser. */
  a {
    word-break: break-word;
  }
  .prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    color: #f30303;
    font-weight: 600;
  }
  
  .info,
  .success,
  .warning,
  .danger,
  .neutral {
    padding: 0.5rem 1rem;
    border-left: 5px solid;
  }
  .info {
    background-color: rgba(0, 0, 225, 0.1);
    border-left-color: rgba(0, 0, 225, 0.25);
  }
  .success {
    background-color: rgba(0, 225, 0, 0.1);
    border-left-color: rgba(0, 225, 0, 0.25);
  }
  .warning {
    background-color: rgba(225, 225, 0, 0.1);
    border-left-color: rgba(225, 225, 0, 0.25);
  }
  .danger {
    background-color: rgba(155, 0, 0, 0.2);
    border-left-color: rgba(155, 0, 0, 0.3);
  }
  .neutral {
    background-color: rgba(120, 120, 120, 0.08);
    border-left-color: rgba(120, 120, 120, 0.25);
  }
  img {
    border-radius: 0.375rem;
  }
</style>

<Layout title={post.data.title}>
  <Container>
    <div class="mx-auto max-w-3xl mt-8 lg:mt-16">
      <span class="text-blue-600 uppercase tracking-wider text-sm font-medium">
        {post.data.category}
      </span>
      <h1
        class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight">
        {post.data.title}
      </h1>
      <div class="flex gap-2 mt-3 items-center flex-wrap md:flex-nowrap">
        <span class="text-slate-400 whitespace-nowrap">
          <span class="font-light italic">by</span>{' '}{post.data.author}
        </span>
        <span class="text-slate-400">•</span>
        <time
          class="text-slate-400 whitespace-nowrap"
          datetime={post.data.publishDate.toISOString()}>
          {post.data.publishDate.toDateString()}
        </time>
        <span class="text-slate-400 hidden md:block">•</span>
        <div class="w-full md:w-auto flex flex-wrap gap-x-2">
          {
            post.data.tags.map((tag) => (
              <span class="text-sm text-slate-700">#{tag}</span>
            ))
          }
        </div>
      </div>
    </div>

    <div class="mx-auto prose prose-md lg:prose-lg mt-6 max-w-3xl">
      <Content />
    </div>
    <div class="text-center mt-8">
      <a
        href="/blog"
        class="bg-gray-100 px-5 py-3 rounded-md hover:bg-gray-200 transition"
        >← Back to Blog</a
      >
    </div>
  </Container>
</Layout>
